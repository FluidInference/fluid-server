name: Main Branch CI

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'pyproject.toml'
      - '.github/workflows/main.yml'

jobs:
  auto-format:
    name: Auto-format and Commit
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
      
      - name: Set up Python
        run: uv python install 3.10
      
      - name: Install dependencies
        run: uv sync --all-extras --dev
      
      - name: Run ruff format
        run: |
          uv run ruff format src/ tests/
          uv run ruff check --fix src/ tests/
      
      - name: Check for changes
        id: verify-diff
        run: |
          git diff --quiet || echo "changed=true" >> $GITHUB_OUTPUT
      
      - name: Commit formatting changes
        if: steps.verify-diff.outputs.changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add -A
          git commit -m "Auto-format code with ruff [skip ci]"
          git push

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    needs: auto-format
    
    steps:
      - uses: actions/checkout@v5
        with:
          ref: main
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
      
      - name: Set up Python
        run: uv python install 3.10
      
      - name: Install dependencies
        run: uv sync --all-extras --dev
      
      - name: Run type checking
        run: uv run ty check

  build-and-release:
    name: Build Release Artifacts (${{ matrix.os }} - ${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    needs: [auto-format, type-check]
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            arch: x64
            artifact-name: fluid-server-linux-x64
            binary-name: fluid-server
          - os: windows-latest
            arch: x64
            artifact-name: fluid-server-windows-x64
            binary-name: fluid-server.exe
          - os: macos-latest
            arch: x64
            artifact-name: fluid-server-macos-x64
            binary-name: fluid-server
    
    steps:
      - uses: actions/checkout@v5
        with:
          ref: main
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
      
      - name: Set up Python
        run: uv python install 3.10
      
      - name: Install dependencies
        run: uv sync --all-extras --dev
      
      - name: Build executable with PyInstaller
        run: |
          uv run pyinstaller fluid-server.spec --noconfirm --clean
      
      - name: Create release archive (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          cd dist
          tar -czf ../${{ matrix.artifact-name }}.tar.gz *
          cd ..
      
      - name: Create release archive (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Compress-Archive -Path dist\* -DestinationPath ${{ matrix.artifact-name }}.zip
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: |
            ${{ matrix.artifact-name }}.tar.gz
            ${{ matrix.artifact-name }}.zip
          retention-days: 30
      
      - name: Get version from pyproject.toml
        id: get-version
        shell: bash
        run: |
          VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Create draft release (if tag pushed)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          prerelease: false
          files: |
            ${{ matrix.artifact-name }}.tar.gz
            ${{ matrix.artifact-name }}.zip
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Changes in ${{ github.ref_name }}
            
            ### Downloads
            - Linux x64: `${{ matrix.artifact-name }}.tar.gz`
            - Windows x64: `${{ matrix.artifact-name }}.zip`
            - macOS x64: `${{ matrix.artifact-name }}.tar.gz`
            
            ### Installation
            Extract the archive and run the `fluid-server` executable.
          generate_release_notes: true