name: Release Builds

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.1.0)'
        required: true
        type: string
  release:
    types: [created]

jobs:
  build-matrix:
    name: Build Windows ARM64
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
      
      - name: Set up Python
        run: uv python install 3.10
      
      - name: Install dependencies
        run: uv sync --all-extras --dev
      
      - name: Build executable with PyInstaller (Windows ARM64)
        shell: pwsh
        run: |
          # Use the build.ps1 script which has proper ARM64 configuration
          .\scripts\build.ps1
      
      - name: Create archive (Windows ARM64)
        shell: pwsh
        run: |
          Compress-Archive -Path dist\* -DestinationPath "fluid-server-windows-arm64.zip"
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: fluid-server-windows-arm64
          path: fluid-server-windows-arm64.zip
          retention-days: 30
      
      - name: Upload to Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          files: fluid-server-windows-arm64.zip
          fail_on_unmatched_files: false

  verify-builds:
    name: Verify All Builds
    runs-on: ubuntu-latest
    needs: build-matrix
    if: always()
    
    steps:
      - name: Check build results
        run: |
          echo "Build completed"
          echo "Artifacts available:"
          echo "- Windows ARM64 (Qualcomm)"
      
      - name: Download all artifacts
        uses: actions/download-artifact@v5
        with:
          path: artifacts/
      
      - name: List artifacts
        run: |
          echo "Downloaded artifacts:"
          dir artifacts\ /s
        shell: cmd